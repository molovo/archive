{
  "name": "imagemin-jpegoptim",
  "version": "4.0.0",
  "description": "jpegoptim imagemin plugin",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/imagemin/imagemin-jpegoptim"
  },
  "author": {
    "name": "Kevin Mårtensson",
    "email": "kevinmartensson@gmail.com",
    "url": "https://github.com/kevva"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "compress",
    "gulpplugin",
    "image",
    "imageminplugin",
    "img",
    "jpg",
    "minify",
    "optimize"
  ],
  "dependencies": {
    "is-jpg": "^1.0.0",
    "jpegoptim-bin": "^2.0.0",
    "through2": "^0.6.1"
  },
  "devDependencies": {
    "ava": "^0.0.4",
    "buffer-equal": "^0.0.1",
    "vinyl-file": "^1.1.0"
  },
  "readme": "# imagemin-jpegoptim [![Build Status](http://img.shields.io/travis/imagemin/imagemin-jpegoptim.svg?style=flat)](https://travis-ci.org/imagemin/imagemin-jpegoptim) [![Build status](https://ci.appveyor.com/api/projects/status/dd2mjdl1lhqjj6u7)](https://ci.appveyor.com/project/ShinnosukeWatanabe/imagemin-jpegoptim)\n\n> jpegoptim [imagemin](https://github.com/imagemin/imagemin) plugin\n\n\n## Install\n\n```sh\n$ npm install --save imagemin-jpegoptim\n```\n\n\n## Usage\n\n```js\nvar Imagemin = require('imagemin');\nvar jpegoptim = require('imagemin-jpegoptim');\n\nvar imagemin = new Imagemin()\n\t.src('images/*.jpg')\n\t.dest('build/images')\n\t.use(jpegoptim({ progressive: true }));\n\nimagemin.run(function (err, files) {\n\tif (err) {\n\t\tthrow err;\n\t}\n\n\tconsole.log('Files optimized successfully!');\n});\n```\n\nYou can also use this plugin with gulp:\n\n```js\nvar gulp = require('gulp');\nvar jpegoptim = require('imagemin-jpegoptim');\n\ngulp.task('default', function () {\n\treturn gulp.src('images/*.jpg')\n\t\t.pipe(jpegoptim({ progressive: true })())\n\t\t.pipe(gulp.dest('build/images'));\n});\n```\n\n## Options\n\n### progressive\n\nType: `Boolean`  \nDefault: `false`\n\nLossless conversion to progressive.\n\n### max\n\nType: `Number`\n\nSet maximum image quality factor. (`0` - `100`)\n\n### size\n\nType: `Number` or `String`\n\nTry to optimize file to given size. Target size is specified either in kilo bytes (`1` -) or as percentage (`1%` - `99%`).\n\n\n## License\n\nMIT © [imagemin](https://github.com/imagemin)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/imagemin/imagemin-jpegoptim/issues"
  },
  "_id": "imagemin-jpegoptim@4.0.0",
  "dist": {
    "shasum": "5f3129435bd3fd6e1692246d4ba0f6c6d9ed11b2"
  },
  "_from": "imagemin-jpegoptim@latest",
  "_resolved": "https://registry.npmjs.org/imagemin-jpegoptim/-/imagemin-jpegoptim-4.0.0.tgz"
}
