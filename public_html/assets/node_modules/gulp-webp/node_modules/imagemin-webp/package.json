{
  "name": "imagemin-webp",
  "version": "3.0.3",
  "description": "webp imagemin plugin",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/imagemin/imagemin-webp"
  },
  "author": {
    "name": "Kevin Mårtensson",
    "email": "kevinmartensson@gmail.com",
    "url": "https://github.com/kevva"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "compress",
    "cwebp",
    "gulpplugin",
    "image",
    "imageminplugin",
    "img",
    "jpg",
    "minify",
    "optimize",
    "png",
    "tif",
    "webp"
  ],
  "dependencies": {
    "cwebp-bin": "^3.0.0",
    "exec-buffer": "^2.0.0",
    "is-cwebp-readable": "^1.0.0",
    "replace-ext": "0.0.1",
    "through2": "^0.6.1"
  },
  "devDependencies": {
    "ava": "^0.0.4",
    "buffer-equal": "^0.0.1",
    "is-webp": "^1.0.0",
    "vinyl": "^0.4.3",
    "vinyl-file": "^1.1.0"
  },
  "readme": "# imagemin-webp [![Build Status](http://img.shields.io/travis/imagemin/imagemin-webp.svg?style=flat)](https://travis-ci.org/imagemin/imagemin-webp) [![Build status](https://ci.appveyor.com/api/projects/status/erd3nf73djfm4gjp?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/imagemin-webp)\n\n> webp imagemin plugin\n\n\n## Install\n\n```\n$ npm install --save imagemin-webp\n```\n\n\n## Usage\n\n```js\nvar Imagemin = require('imagemin');\nvar imageminWebp = require('imagemin-webp');\n\nnew Imagemin()\n\t.src('images/*.{jpg,png}')\n\t.dest('build/images')\n\t.use(imageminWebp({quality: 50}))\n\t.run();\n```\n\nYou can also use this plugin with [gulp](http://gulpjs.com):\n\n```js\nvar gulp = require('gulp');\nvar imageminWebp = require('imagemin-webp');\n\ngulp.task('default', function () {\n\treturn gulp.src('images/*.{jpg,png}')\n\t\t.pipe(imageminWebp({quality: 50})())\n\t\t.pipe(gulp.dest('build/images'));\n});\n```\n\n\n## API\n\n### imageminWebp(options)\n\n#### options.preset\n\nType: `string`  \nDefault: `default`\n\nPreset setting, one of `default`, `photo`, `picture`, `drawing`, `icon` and `text`.\n\n#### options.quality\n\nType: `number`  \nDefault: `75`\n\nSet quality factor between `0` and `100`.\n\n#### options.alphaQuality\n\nType: `number`  \nDefault: `100`\n\nSet transparency-compression quality between `0` and `100`.\n\n#### options.method\n\nType: `number`  \nDefault: `4`\n\nSpecify the compression method to use, between `0` (fastest) and `6` (slowest). This parameter controls the trade off between encoding speed and the compressed file size and quality.\n\n#### options.size\n\nType: `number`  \n\nSet target size in bytes.\n\n#### options.sns\n\nType: `number`  \nDefault: `80`\n\nSet the amplitude of spatial noise shaping between `0` and `100`.\n\n#### options.filter\n\nType: `number`  \n\nSet deblocking filter strength between `0` (off) and `100`.\n\n#### options.autoFilter\n\nType: `boolean`  \nDefault: `false`  \n\nAdjust filter strength automatically.\n\n#### options.sharpness\n\nType: `number`  \nDefault: `0`\n\nSet filter sharpness between `0` (sharpest) and `7` (least sharp).\n\n#### options.lossless\n\nType: `boolean`  \nDefault: `false`\n\nEncode images losslessly.\n\n\n## License\n\nMIT © [imagemin](https://github.com/imagemin)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/imagemin/imagemin-webp/issues"
  },
  "_id": "imagemin-webp@3.0.3",
  "dist": {
    "shasum": "306d370da6f3bd5c054fdb4c95434e6c5a52f32d"
  },
  "_from": "imagemin-webp@^3.0.1",
  "_resolved": "https://registry.npmjs.org/imagemin-webp/-/imagemin-webp-3.0.3.tgz"
}
